//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
#RE_IN_DE
#pragma define (store)
_SIG_LSL_CMultimasterState : CLASS_PUBLIC
#include <.\LoaderItf.h>
	TYPE
	  _MMStateSvr :
	  (
	    Offline:=0,
	    Online_Initializing:=1,
	    Online:=2,
	    Online_NotAllServerAvailable:=3,
	    SvrNotFoundAtStation:=16
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
DataManagerFIFO : CLASS_PUBLIC
	TYPE
#pragma pack(push, 1)
	  t_s_Header : STRUCT
	    Prio : DINT;
	    Timeout : UDINT;
	    Timestamp : UDINT;
	    JobID : DINT;
	    Valid : BOOL;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_s_Info : STRUCT
	    SourceID : DINT;
	    DestinationID : DINT;
	    pThis : ^void;
	    pCallback : ^void;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_e_Entry : STRUCT
	    Header : t_s_Header;
	    Info : t_s_Info;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_s_Data : STRUCT
	    ptr : pVoid;
	    size : UDINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
DataManagerPriority : CLASS_PUBLIC
	TYPE
	  t_e_CallbackState :
	  (
	    _MNG_Sending,
	    _MNG_Sended,
	    _MNG_Received,
	    _MNG_NoReceiverConnected,
	    _MNG_JobDeletet,
	    _MNG_TimeOut,
	    _MNG_GlobalReceiveError
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
GetTaskHandle : CLASS_PUBLIC
	TYPE
	  _ActTask :
	  (
	    AT_Real,
	    AT_Cyclic,
	    AT_Background,
	    AT_NoStdTask
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
MerkerEx : CLASS_PUBLIC
#include <.\lsl_st_mt.h>
	TYPE
	  Cmdm_udLength :
	  (
	    GET_DATA_PTR,
	    EXCHANGE_DATA_PTR,
	    SAVE_DATA_TO_RAMEXFILE
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
RamRingBuffer : CLASS_PUBLIC
	TYPE
#pragma pack(push, 1)
	  SRR_HEAD : STRUCT
	    No : UDINT;
	    Begin : UDINT;
	    Pos : UDINT;
	    Used : UDINT;
	    RecSize : UDINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
#pragma InclDefBlk Reader
Reader : CLASS_PUBLIC
	TYPE
#pragma pack(push, 1)
	  Item : STRUCT
	    Id : DINT;
	    Vol : DINT;
	  END_STRUCT;
#pragma pack(pop)
	  Order : STRUCT
	    Location : DINT;
	    Items : ARRAY [0..255] OF DINT;
	    Volumes : ARRAY [0..255] OF DINT;
	  END_STRUCT;
	END_TYPE
END_CLASS;
#pragma define (restore)
TCPCommunication : CLASS_PUBLIC
#include "..\Class\TCPCommunication\TCPCommunication.h"
#include "..\Class\TCPCommunication\SalamanderDelay.h"
	TYPE
	  t_e_ConnectionType :
	  (
	    NotValid,
	    TCPClient,
	    TCPServer,
	    InternConnection
	  )$UDINT;
	  t_e_PackageCmd :
	  (
	    PCMD_Alive,
	    PCMD_Data,
	    PCMD_Acknowledge,
	    PCMD_ConnectionOK,
	    PCMD_ConnectionClosed,
	    PCMD_ConnectionTimeOut,
	    PCMD_TryToConnect,
	    PCMD_ComDeactivated,
	    PCMD_ComActivated
	  )$UDINT;
#pragma pack(push, 1)
	  t_s_Header : STRUCT
	    Commando : t_e_PackageCmd;
	    DestinationID : DINT;
	    SourceID : DINT;
	    JobID : DINT;
	    pThisSource : pVoid;
	    pCallBackSource : pVoid;
	    PackageSize : UDINT;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_s_LogEntry : STRUCT
	    Header : t_s_Header;
	    Prio : DINT;
	    TimeStamp : UDINT;
	    TimeOut : UDINT;
	    TCPType : DINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
VirtualBaseInit : CLASS_PUBLIC
	TYPE
	  CmdData :
	  (
	    GET_ADD_INFO,
	    READ_DATA,
	    WRITE_DATA,
	    READ_DATA_OFF,
	    WRITE_DATA_OFF
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)

#RE_IN_DE
