//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION
#include <.\LoaderItf.h>

(*!
<Class
	Name               = "_SIG_LSL_CMultimasterState"
	Revision           = "1.0"
	GUID               = "{CFD2248D-0E6D-44A1-8A25-0CE508B03FFC}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(570,180)">
	<Channels>
		<Server Name="ClassSvr" GUID="{7E78FDC4-6FEC-4F41-96C3-B7045B9BD989}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="PLC" GUID="{97119E89-B2D9-484B-B5C6-900947D1F92A}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Terminal" GUID="{703A8C69-E610-434A-A566-76AC31FDAE38}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\LoaderItf.h" Include="true"/>
		</Files>
	</Dependencies>
</Class>
*)
_SIG_LSL_CMultimasterState : CLASS
	TYPE
	  _MMStateSvr :  //! <Type Public="true" Name="_MMStateSvr"/>
	  (
	    Offline:=0,  //! <Type Comment="Station offline." Name="_MMStateSvr.Offline"/>
	    Online_Initializing:=1,  //! <Type Comment="Station online,&#10;servers not updated." Name="_MMStateSvr.Online_Initializing"/>
	    Online:=2,  //! <Type Comment="Station online,&#10;all servers existing and initalized." Name="_MMStateSvr.Online"/>
	    Online_NotAllServerAvailable:=3,  //! <Type Comment="Station online,&#10;not all server exists, existing servers initalized." Name="_MMStateSvr.Online_NotAllServerAvailable"/>
	    SvrNotFoundAtStation:=16  //! <Type Comment="No valid LasalID for server found." Name="_MMStateSvr.SvrNotFoundAtStation"/>
	  )$UDINT;
	END_TYPE
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	Terminal 	: SvrCh__MMStateSvr_PTofCls__SIG_LSL_CMultimasterState;
	PLC 	: SvrCh__MMStateSvr_PTofCls__SIG_LSL_CMultimasterState;
  //Clients:
  //Variables:
		m_arrSERVERS : ARRAY [0..255] OF ^_MMStateSvr;

  //Functions:
	
	FUNCTION _SIG_LSL_CMultimasterState
		VAR_OUTPUT
			ret_code 	: ConfStates;
		END_VAR;
	
	FUNCTION GLOBAL Callback
		VAR_INPUT
			pThis 	: ^void;
			udStationId 	: UDINT;
			szStationName 	: ^CHAR;
			udServerHandle 	: UDINT;
			szServerName 	: ^CHAR;
			udState 	: _SIG_LSL_CMultimasterState::_MMStateSvr;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL UserCallback
		VAR_INPUT
			udStationId 	: UDINT;
			szStationName 	: ^CHAR;
			udServerHandle 	: UDINT;
			szServerName 	: ^CHAR;
			udState 	: _SIG_LSL_CMultimasterState::_MMStateSvr;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _SIG_LSL_CMultimasterState::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__SIG_LSL_CMULTIMASTERSTATE
1$UINT, 0$UINT, (SIZEOF(::_SIG_LSL_CMultimasterState))$UINT, 
3$UINT, 0$UINT, 0$UINT, 
TO_UDINT(4258542948), "_SIG_LSL_CMultimasterState", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::_SIG_LSL_CMultimasterState.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::_SIG_LSL_CMultimasterState.Terminal.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1229490445), "Terminal", 
(::_SIG_LSL_CMultimasterState.PLC.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(551872385), "PLC", 
//Clients:
END_FUNCTION


#define USER_CNT__SIG_LSL_CMultimasterState 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__SIG_LSL_CMultimasterState] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _SIG_LSL_CMultimasterState::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT__SIG_LSL_CMultimasterState, pCmd := #vmt.CmdTable);
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #UserCallback();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ret_code	:= _SIG_LSL_CMultimasterState();

END_FUNCTION

//{{LSL_IMPLEMENTATION
FUNCTION GLOBAL _SIG_LSL_CMultimasterState::Callback
VAR_INPUT
  pThis           : ^void;
  udStationId     : UDINT;
  szStationName   : ^CHAR;
  udServerHandle	 : UDINT;
  szServerName  	: ^CHAR;
  udState 	      : _SIG_LSL_CMultimasterState::_MMStateSvr;
END_VAR
  this := pThis$^_SIG_LSL_CMultimasterState;

  if ( udState$UDINT < __MMSTATE_SERVER_BEGIN_ ) then
    if ( m_arrSERVERS[TO_USINT(udStationId)] <> NIL ) then
      m_arrSERVERS[TO_USINT(udStationId)]^ := ( udState );
    end_if;

  end_if;

  UserCallback(udStationId, szStationName, udServerHandle, szServerName, udState);
END_FUNCTION

#pragma warning(disable:73);
FUNCTION VIRTUAL GLOBAL _SIG_LSL_CMultimasterState::UserCallback
VAR_INPUT
  udStationId     : UDINT;
  szStationName   : ^CHAR;
  udServerHandle	 : UDINT;
  szServerName  	: ^CHAR;
  udState 	      : _SIG_LSL_CMultimasterState::_MMStateSvr;
END_VAR
END_FUNCTION
#pragma warning(default:73);

FUNCTION _SIG_LSL_CMultimasterState::_SIG_LSL_CMultimasterState
VAR_OUTPUT
  ret_code 	: ConfStates;
END_VAR
    ret_code := C_OK;

    //for each MM-Station a entry in ARRAY for faster access:
    _memset(#m_arrSERVERS[0], 0, SIZEOF(m_arrSERVERS));
    m_arrSERVERS[TO_USINT(LDR_MM_StatNameGetNr("Terminal"))] := #Terminal$_MMStateSvr;
    m_arrSERVERS[TO_USINT(LDR_MM_StatNameGetNr("PLC"))] := #PLC$_MMStateSvr;
    //Install callback at Loader:
    LDR_MM_InstallCallback(#Callback(), this);

END_FUNCTION
